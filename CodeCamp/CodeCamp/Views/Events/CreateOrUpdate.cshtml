@model CodeCamp.Domain.Commands.CreateOrUpdateEvent
@{
    var isCreate = string.IsNullOrEmpty(Model.Event.Id);
    var title = isCreate ? "Create Event" : "Edit Event";
    var action = isCreate
        ? Url.Action("Index", "Events")
        : Url.Action("Detail", "Events", new {eventSlug = Model.Slug});
    
    ViewInfo.Title = title;
}

<div class="jumbotron">
    <h1>@title</h1>
    <p class="lead">Fill in some details and your on your way...</p>
</div>

<div class="row">
    <div class="col-md-offset-3 col-md-6">
        <form class="form-horizontal" role="form" method="POST" action="@action">
            <div class="panel panel-default">
                <div class="panel-heading">Basics</div>
                <div class="panel-body">
                    <div class="form-group">
                        <label for="Event.Name" class="col-lg-2 control-label">Name</label>
                        <div class="col-lg-10">
                            <input type="text" class="form-control" id="Event.Name" name="Event.Name" placeholder="Name" value="@Model.Event.Name" />
                            @Html.ValidationMessage("Event.Name")
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="Slug" class="col-lg-2 control-label">Slug</label>
                        <div class="col-lg-10">
                            @if(isCreate) {
                                <input type="text" class="form-control" id="Slug" name="Slug" placeholder="Slug" value="@Model.Slug" />
                                @Html.ValidationMessageFor(m => m.Slug)
                            }else{
                                <p class="form-control-static">@Model.Slug</p>
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Event.Start" class="col-lg-2 control-label">Start</label>
                        <div class="col-lg-10">
                            <input type="datetime" class="form-control" id="Event.Start" name="Event.Start" placeholder="Start" value="@Model.Event.Start.ToString("MM/dd/yy h:mm tt")" />
                            @Html.ValidationMessage("Event.Start")
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Event.End" class="col-lg-2 control-label">End</label>
                        <div class="col-lg-10">
                            <input type="datetime" class="form-control" id="Event.End" name="Event.End" placeholder="End" value="@Model.Event.End.ToString("MM/dd/yy h:mm tt")" />
                            @Html.ValidationMessage("Event.End")
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="Description" class="col-lg-2 control-label">Description</label>
                        <div class="col-lg-10">
                            <textarea rows="4" class="form-control" id="Event.Description" name="Event.Description" placeholder="Description">@Model.Event.Description</textarea>
                            @Html.ValidationMessage("Event.Description")
                        </div>
                    </div>
                    
                    @if(Model.Event.IsCurrent){
                        <div class="form-group">
                            <div class="col-lg-offset-2 col-lg-10">
                                <div class="checkbox">
                                    <label>
                                        @Html.CheckBoxFor(x => x.Event.IsSessionSubmissionOpen) Open for Session Submission
                                    </label>
                                </div>
                            </div>
                        </div>
                    }   
                </div>
            </div>
            <div class="pull-right">
                @if(isCreate){
                    <button type="submit" class="btn btn-lg btn-success">Save</button>
                }else{
                    <button type="submit" class="btn btn-lg btn-success">Update</button>
                }
            </div>
        </form>
        
        <div class="pull-right">
            @if(!isCreate && !Model.Event.IsCurrent) {
                <form style="display: inline; margin-right: 8px" method="POST" action="@Url.Action("MakeCurrent", "Events", new { eventSlug = Model.Slug })">
                    <button class="btn btn-lg btn-primary">Make Current</button>
                </form>
            }
        </div>
    </div>
</div>